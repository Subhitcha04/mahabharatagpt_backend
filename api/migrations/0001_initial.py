# Generated by Django 4.1.13 on 2025-02-27 05:23

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='characters/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison_title', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='comparisons/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CreatureOrSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='creatures/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CulturalOrHistorical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture_event', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='cultural_events/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MythologyEra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('era_name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='mythology_eras/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MythologySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='mythology_systems/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ObjectOrArtifact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='objects/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PlaceOrLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='places/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProphecyOrFate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prophecy_title', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='prophecies/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RiddleOrPuzzle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('riddle', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='riddles/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SceneOrIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scene_title', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='scenes/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StoryOrEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('source', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='stories/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ThemeOrMoral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=255)),
                ('queries', models.JSONField()),
                ('answers', models.JSONField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='themes/')),
                ('manual_entry', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.appuser')),
            ],
        ),
    ]
